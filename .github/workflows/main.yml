# This is a basic workflow to help you get started with Actions
# Give a name for your workflow

name: FlutterProjectBuilder

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
# [workflow_dispatch] --> allows to build manually
# you may use the following to build on each push
# on:
#  push:	
#    branches: [ master ]	

on: [workflow_dispatch]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
     - uses: actions/checkout@v1
     - uses: actions/setup-java@v1
       with:
        java-version: '12.x'
      # use the flutter action to get the dependencies
      # actions are usually written in JS/dockerfile and found in their own repo
      # github has a marketplace for these action, you can use them or create your own
     - name: Flutter get
       uses: subosito/flutter-action@v1.3.2
       with:
         flutter-version: '1.17.5'
     - run: flutter pub get
     - run: flutter build apk --split-per-abi
     - name: collect apk artifacts
       uses: actions/upload-artifact@v2
       with:
        # artifacts will be retrieved as release-files.zip
        name: release-files
        # Path to the release apks.
        path: build/app/outputs/apk/release/*.apk
